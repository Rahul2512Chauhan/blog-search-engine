{
  "title": "5 Crucial Tweaks That Will Make Your Charts Accessible to People with Visual Impairments",
  "author": "Dario Radečić",
  "date": "2025-06-06T07:39:46-05:00",
  "content": "The world’s leading publication for data science, AI, and ML professionals.\n\n\t\t\tMore than 350 million people are colorblind — make sure they can read your visualizations.\t\t\nApproximately 4.5% of the world’s population is colorblind.\nThat’s about 350 million people worldwide having just one type of visual impairment. The numbers get significantly higher if you were to take all conditions into account. Yet, it’s a rarely discussed topic.\nAs a data professional, you don’t want anyone misinterpreting your visuals. Sure, being extra clear is more work, but you’ll make a decent chunk of the population happier. \nToday you’ll get 5 actionable tips for making your existing visualizations accessible.\nBut first, let’s go over some general guidelines you should follow when accessibility is a top priority.\nEverything listed below is a curated and significantly shortened checklist of the A11Y project. If you’re wondering, “A11Y” is an abbreviation for “accessibility” (11 letters between “A” and “Y”).\nAnyhow, here’s what you should pay attention to:\nWith these in mind, I came up with 5 actionable tweaks you can make to your visualizations right now.\nLet’s dive into #1.\nThe easiest way to understand why color choice matters is by doing the wrong thing first.\nConsider the following dataset:\nIt’s a perfect candidate for a stacked bar chart. In other words, to show office locations on the X-axis and stack employee counts on the Y-axis.\nNow imagine you’re really into the color green. \nYou might want to color individual bar portions in different shades of green. It’s a horrible practice (except for some monochromatic color palettes), as you can see from the following:\nMany people wonder what their chart would look like if it was printed in a black-and-white book. \nThis one would look only marginally worse, but only because it looks horrendous from the get-go. Distinguishing between bar portions is challenging even for people without visual impairments.\nYou can use this website to check the contrast between two colors.\nLet’s fix it by using a high-contrast color palette.\nI’ll continue with the assumption you like the color green.\nQuestion: how can you create a high-contrast color palette from one color? Answer: start with a dark shade and finish with a color similar enough to your primary color. In this case, yellow-gold is a perfect candidate.\nYou get the best of both worlds this way. You’re still using colors you like and the colors don’t have to get lighter (which would reduce the contrast) as you go through bar segments.\nIn practice, this boils down to playing around with the color parameter for all segments:\nSo much easier on the eyes.\nBut consider the following scenarios:\nThere’s an easier solution to make your chart color scheme easier on the eyes while accounting for people with visual impairments.\nOne such solution is to use a colorblind-friendly color palette.\nThe first line of the snippet shows you how:\nThis palette contains 10 colorblind-friendly colors, so it’s a good fit for charts with 10 groups or less.\nIf you need more, maybe you’ll be better off rethinking your visualization strategy.\nAnother great way to remove any kind of misinterpretation from your charts is to use patterns instead of colors (or as an addition to colors).\nMatplotlib has 10 hatch patterns you can choose from.\nYou can further customize the hatches by increasing their density or by combining multiple patterns. But that’s a topic for another time.\nTo implement patterns, add the hatch parameter to plt.bar(). The example below removes color altogether by setting fill=False:\nNow there’s no way to misinterpret data on this chart.\nIf you want the best of both worlds, color + pattern is where it’s at.\nYou’ll want to remove the fill=False parameter and change it with color. Or, just copy the following code snippet:\nDark patterns are clearly visible on bar segments, but that might not always be the case.\nThe edgecolor parameter controls the pattern color. Let’s see what happens after setting it to white:\nThe pattern is visible for HR and Engineering departments, but the two on the top are a different story.\nYou might have no trouble seeing the lines on the topmost chart segment, but put yourself in the shoes of a person with visual impairments. They should always be your frame of reference.\nRemember: Light-colored patterns work well on dark backgrounds. Dark-colored patterns work well on light backgrounds. Adjust accordingly.\nThis principle goes in two directions:\nDoing both simultaneously is somewhat of an ultimate sin in data visualization.\nLet’s start by adding a couple more departments into the mix.\nThe data is getting difficult to manage with Python lists, so I’ve opted for a Pandas DataFrame instead:\nNow, using the colorblind-friendly palette, let’s plot the employee count per location and department as a stacked bar chart. To make things extra crammed, I’ve also thrown text counts into the mix:\nNow that’s just ugly.\nOne way to solve this unpresentable mess is by showing less information to the user.\nFor example, only show employee count in one city (across departments). You can then add a dropdown menu to the side of the chart so the user can control the office location.\nThe following snippet plots employees per department in Chicago as a horizontal bar chart:\nIf showing less information isn’t an option, maybe you can transpose your data.\nFor example, we’re dealing with 5 office locations and 10 departments. Showing 10 columns instead of 10 bar segments is easier on the eyes. \nThis way, you’ll end up showing office locations as bar segments instead of departments:\nIt’s just a matter of reframing the problem.\nThe chart on Image 10 is miles ahead of the chart on Image 8. It’s a fact. No one can argue with it.\nYou can leverage subtitle and/or caption sections of your chart to add extra information.\nThis comes in handy when you want to provide more context about the data, cite sources, or summarize the main point(s) of your visualization. The last one is most applicable for people with visual impairments.\nThe problem with matplotlib is that it doesn’t have a dedicated function for chart subtitles and captions. You can use suptitle(), but you’ll have to play around with x and y-axis coordinates.\nHere’s an example:\nIf you prefer a caption over a subtitle, you only have the change y-axis coordinate in plt.suptitle():\nAll in all, a subtitle or a caption may be the deciding factor in correctly getting your message to a person with visual impairments. \nJust don’t make it 10 paragraphs long. Otherwise, it’s the 3rd point of this article all over again.\nMany people with visual impairments use screen readers.\nThe problem with screen readers and charts is that they simply can’t coexist. They might be able to pick up textual elements from the graph, but they can’t interpret the visual content. So, whenever you’re sharing your visualizations (e.g., embedding them into a website), you must add alt text.\nThis is a paragraph the screen reader will read to your user.\nTo demonstrate, let’s use the plt.savefig() function to save the chart as an image:\nIn a new HTML document, add an <img> tag that points to the image. This is where you should provide alt text:\nYou can’t see alt text when you open the HTML file, but that’s because you’re not using a screen reader.\nIf the screen reader is detected, the alt text will be automatically read to the user.\nThe best you can do is use a screen reader plugin or point to the image that doesn’t exist in HTML:\nNow the image can’t be found, so alt text is displayed instead.\nAnd there you have it — 5 things you should always keep in mind when designing data visualizations. \nThese tips are helpful in general but are of vital importance when accessibility is essential. And it always should be. It requires a tiny bit of extra work from your end, but makes your findings accessible to millions of additional people worldwide.\nWhich data visualization features for accessibility do you implement for your charts and applications?\n\nWritten By\nTopics:\nShare this article:\nHow to build a modern, scalable data platform to power your analytics and data science… \nHow to make graphs using Matplotlib, Pandas and Seaborn \nCreate Visualizations at the Level of Leading Newspapers \nOur weekly selection of must-read Editors’ Picks and original features \nOur weekly selection of must-read Editors’ Picks and original features \nInsights from the NYC Public Hospital System’s Price Lists \nAn incredible, powerful and friendly tool to show geospatial data \nYour home for data science and Al. The world’s leading publication for data science, data analytics, data engineering, machine learning, and artificial intelligence professionals.\nThese cookies enable the website to provide enhanced functionality and personalisation. They may be set by us or by third party providers whose services we have added to our pages. If you do not allow these cookies then some or all of these services may not function properly.\nThese cookies are necessary for the website to function and cannot be switched off in our systems. They are usually only set in response to actions made by you which amount to a request for services, such as setting your privacy preferences, logging in or filling in forms. You can set your browser to block or alert you about these cookies, but some parts of the site will not then work. These cookies do not store any personally identifiable information.\nThese cookies allow us to count visits and traffic sources so we can measure and improve the performance of our site. They help us to know which pages are the most and least popular and see how visitors move around the site. All information these cookies collect is aggregated and therefore anonymous. If you do not allow these cookies we will not know when you have visited our site, and will not be able to monitor its performance.\nThese cookies may be set through our site by our advertising partners. They may be used by those companies to build a profile of your interests and show you relevant adverts on other sites. They do not store directly personal information, but are based on uniquely identifying your browser and internet device. If you do not allow these cookies, you will experience less targeted advertising.\n\nExploring the Proportional Odds Model for Ordinal Logistic Regression | Towards Data Science\nAutomate Models Training: An MLOps Pipeline with Tekton and Buildpacks | Towards Data Science\nHow AI Agents \"Talk\" to Each Other | Towards Data Science\nDesign Smarter Prompts and Boost Your LLM Output: Real Tricks from an AI Engineer’s Toolbox | Towards Data Science",
  "url": "https://towardsdatascience.com/5-crucial-tweaks-that-will-make-your-charts-accessible-to-people-with-visual-impairments/"
}